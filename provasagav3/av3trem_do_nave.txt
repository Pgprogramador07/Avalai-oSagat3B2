CODIGOS


Um botão que gere um link aleatório do youtube na sua página (ESSE É DIFICINHO!) 2,0 PTS


Gerador de links:

globals.css  : 

/* globals.css */
body {
  background-color: pink;
  font-family: Arial, sans-serif;
  color: #333;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  margin: 0;
}


.largura320 {
  width: 320px;
}


.altura240 {
  height: 240px;
}


.outraclasse {
  background-color: red;
}


.container {
  background-color: white;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  text-align: center;
  max-width: 500px;
  width: 100%;
}


button {
  padding: 10px 20px;
  font-size: 16px;
  background-color: #4caf50;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  margin-top: 20px;
}


button:hover {
  background-color: #45a049;
}


a {
  color: #0070f3;
  text-decoration: none;
}


a:hover {
  text-decoration: underline;
}





layout.tsx: 

import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";


export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};


export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body>
        {children}
      </body>
    </html>
  );
}





Page.tsx:  

"use client";
import { useState } from "react";


function gerarLinkAleatorio() {
  const videos = [
    "https://www.youtube.com/watch?v=OWOjRdmpM6I", // Exemplo 1
    "https://www.youtube.com/watch?v=8mFl9RSzUCE", // Exemplo 2
    "https://www.youtube.com/watch?v=eE1NEt7jyA4", // Exemplo 3
    "https://www.youtube.com/watch?v=b4_PA7GsLwA", // Exemplo 4
  ];


  const indexAleatorio = Math.floor(Math.random() * videos.length);
  return videos[indexAleatorio];
}


export default function Home() {
  const [link, setLink] = useState("");


  return (
    <main className="container">
      <h1>Bem-vindo ao Gerador de Links do YouTube!</h1>
      <MinhaDIV l="320px" a="240px" />


      <button onClick={() => setLink(gerarLinkAleatorio())}>
        Gerar Link Aleatório
      </button>


      {link && (
        <div>
          <p>Link Gerado:</p>
          <a href={link} target="_blank" rel="noopener noreferrer">
            {link}
          </a>
        </div>
      )}
    </main>
  );
}


function MinhaDIV({ l, a }) {
  return (
    <div
      style={{
        width: l,
        height: a,
        backgroundColor: "blue",
        margin: "20px auto",
        color: "white",
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        borderRadius: "10px",
      }}
    >
      AAAAAAAAA
    </div>
  );
}






Um botão que utiliza states para mudar a cor da fonte da tua página 1,0 pts



globals.css  : 
body {
  background-color: pink;
}


.largura320 {
  width: 320px;
}


.altura240 {
  height: 240px;
}


.outraclasse {
  background-color: red;
}





Layout.tsx:  

import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";


export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};


export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body>
        {children}
      </body>
    </html>
  );
}




page.tsx:

"use client";
import { useState } from "react";


export default function Home() {
  const [corFonte, setCorFonte] = useState("black"); // Estado para a cor da fonte


  function mudarCorFonte() {
    const cores = ["black", "red", "blue", "green", "purple"];
    const corAleatoria = cores[Math.floor(Math.random() * cores.length)];
    setCorFonte(corAleatoria);
  }


  return (
    <main style={{ color: corFonte, textAlign: "center", padding: "20px" }}>
      <h1>Alterar Cor da Fonte</h1>


      {/* Botão para mudar a cor da fonte */}
      <button
        onClick={mudarCorFonte}
        style={{ padding: "10px 20px", fontSize: "16px" }}
      >
        Mudar Cor da Fonte
      </button>
    </main>
  );
}



